// Copyright 2021 Tiro ehf.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package tiro.tts;

message SynthesisSet {
  // Voices for the voice manager to load and serve
  repeated Voice voices = 1;

  // Shared phonetizers referenced in `voices`
  repeated Phonetizer phonetizers = 2;

  // Shared normalizers referenced in `voices`
  repeated Normalizer normalizers = 3;
}

message Voice {
  enum Gender {
    UNSPECIFIED_GENDER = 0;
    FEMALE = 1;
    MALE = 2;
    OTHER = 3;
  }
  string voice_id = 1;
  string display_name = 2;
  Gender gender = 3;
  string language_code = 4;

  oneof backend {
    Fastspeech2MelganBackend fs2melgan = 5;
    PollyBackend polly = 6;
    Espnet2Backend espnet2 = 7;
  }
}

// A backend for models created with
// [cadia-lvl/FastSpeech2](https://github.com/cadia-lvl/FastSpeech2/tree/080603e6707ae4b8eae6832db7220116e4b4df3b)
// and a vocoder created with
// [seungwonpark/melgan](https://github.com/seungwonpark/melgan). Both the
// FastSpeech2 and MelGAN models have to be converted to TorchScript models
// before use.
message Fastspeech2MelganBackend {
  // *optional* The BCP-47 language code
  string language_code = 1;

  // The pronunciation alphabet used for the models input
  Alphabet alphabet = 2;

  // URI pointing to a Fastspeech model checkpoint.  This can be a file:// URI
  // or gs:// that the server has access to.
  string fastspeech2_uri = 3;

  // URI pointing to a MelGAN TorchScript model.  This can be a file:// URI or
  // gs:// that the server has access to.
  string melgan_uri = 4;

  // Name of the phonetizer to use from SynthesisSet.phonetizers
  // E.g.: "phonetizer/is-IS/2021-07-26
  string phonetizer_name = 5;

  // Name of the normalizer to use from SynthesisSet.normalizers
  // E.g.: "normalizer/is-IS/2021-09-13
  string normalizer_name = 6;
}

// The Polly backend has no config, auth info is supplied with environment
// variables.
message PollyBackend { }


// A backend for ESPNET2 trained and packed models compatible with
// [Text2Speech](https://github.com/espnet/espnet/blob/29f45a45765e78d68e15113a4203de0548040314/espnet2/bin/tts_inference.py#L43)
message Espnet2Backend {
  // The BCP-47 language code
  string language_code = 1;

  // The pronunciation alphabet used for the models input
  Alphabet alphabet = 2;

  // Model pack to load
  //
  // The supported URI schemes are:
  // - file://  for a local zip archive
  // - zoo://   to download a model from the HuggingFace or Zenodo Model Zoo
  string model_pack_uri = 3;

  // A Zip file containing a vocoder compatible with the model referenced in
  // `model_pack_uri`
  //
  // The Zip should contain the model in Pickle file with a .pkl extension and a
  // YAML config file with a .yaml extension.
  //
  // This is only required if the the model pack does not include a vocoder, or
  // does not include a vocoder we want to use.
  //
  // The supported URI schemes are:
  // - file://
  string vocoder_uri = 4;

  // Name of the phonetizer to use from SynthesisSet.phonetizers
  // E.g.: "phonetizer/is-IS/2021-07-26
  string phonetizer_name = 5;

  // Name of the normalizer to use from SynthesisSet.normalizers
  // E.g.: "normalizer/is-IS/2021-09-13
  string normalizer_name = 6;
}

enum Alphabet {
  UNSPECIFIED_ALPHABET = 0;

  // Icelandic subset of IPA without stress or a marker for syllabification
  IPA = 1;

  // Icelandic subset of X-SAMPA without stress or a marker for syllabification
  XSAMPA = 2;

  // Icelandic subset of X-SAMPA *with* stress and a marker for syllabification
  //
  // See for reference: https://github.com/grammatek/ice-g2p/tree/d87c77e/src/ice_g2p/data
  XSAMPA_WITH_STRESS_AND_SYLLABIFICATION = 3;
}

message Phonetizer {
  message Translator {
    oneof model_kind {
      Lexicon lexicon = 1;
      SequiturTranslator sequitur = 2;
      IceG2pTranslator ice_g2p = 3;
    }
  }

  // Resource name for this phonetizer, to be referenced by models.
  // E.g.: "phonetizer/is-IS/2021-07-26"
  string name = 1;

  // The main BCP-47 language code of this phonetizer
  string language_code = 2;

  // A list of "translators" that map from graphemes to phonemes.  The list is
  // ordered, meaning the first one is tried first, then the second and so on.
  // Typically this would only contain two entries: a lexicon and a automatic
  // g2p translator as a backoff.
  repeated Translator translators = 3;
}

message SequiturTranslator {
  // The BCP-47 language code
  string language_code = 1;

  // The pronunciation alphabet used for the models output
  Alphabet alphabet = 2;

  // URI pointing to a Sequitur model.  This can be a file:// URI or gs:// that
  // the server has access to.
  string uri = 3;
}

// A translator backed by [ice-g2p](https://github.com/grammatek/ice-g2p)
//
// Only supports language code is-IS (and en-IS with trigram based lang detect)
message IceG2pTranslator {
  // Supports XSAMPA_WITH_STRESS_AND_SYLLABIFICATION and XSAMPA
  Alphabet alphabet = 2;
}

message Lexicon {
  // The BCP-47 language code
  string language_code = 1;

  // The pronunciation alphabet used in the lexicon
  Alphabet alphabet = 2;

  // URI pointing to a Sequitur model.  This can be a file:// URI or gs:// that
  // the server has access to.
  string uri = 3;
}

message Normalizer {
  // The most basic normalizer, does nothing except filter out the most common
  // punctuation
  message BasicNormalizer {}

  // The Grammatek/S√çM normalizer service
  message GrammatekNormalizer {
    // Address of normalizer, e.g. grpc://normalizer.example.com:8080
    string address = 1;
  }

  // Resource name for this normalizer, to be referenced by models.
  // E.g.: "normalizer/is-IS/2021-09-13
  string name = 1;

  oneof kind {
    BasicNormalizer basic = 2;
    GrammatekNormalizer grammatek = 3;
  };
}
