default:
  image:
    # gcc:9-buster 
    name: gcc@sha256:f7a6e098b77a363b2ac86d36c09e7464839e8ac5d99545f4cf899a8e2b90e3c2
    entrypoint: [""]
  cache:
    paths:
      - bazel-output_base

stages:
  - build
  - test
  - test_predeploy
  - deploy

build:
  stage: build
  script:
    - tools/bazel --output_base=bazel-output_base build //...

deploy:
  stage: deploy
  environment:
    name: production
    kubernetes:
      namespace: default
  only:
    - master
  before_script:
    - mkdir -p $HOME/.docker
    - cat $DOCKER_CONFIG_JSON > $HOME/.docker/config.json
    - curl -L https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl -o /usr/bin/kubectl
    - chmod a+x /usr/bin/kubectl
  script:
    - tools/bazel --output_base=bazel-output_base run //k8s:prod.apply

test:
  stage: test
  script:
    - tools/bazel --output_base=bazel-output_base test :test_frontend
  after_script:
    - mkdir -p test-log
    - cp bazel-testlogs/test_frontend/test.xml test-log/test.xml
  artifacts:
    when: always
    reports:
      junit: test-log/test.xml
      
test_predeploy:
  stage: test
  # only:
  #   - master
  before_script:
    - chmod a+x fetch_models.sh
    - ./fetch_models.sh test
  script:
    - tools/bazel --output_base=bazel-output_base test :test_frontend_model_dependent
  after_script:
    - mkdir -p test-log
    - cp bazel-testlogs/test_frontend/test.xml test-log/test.xml
  artifacts:
    when: always
    reports:
      junit: test-log/test.xml
      